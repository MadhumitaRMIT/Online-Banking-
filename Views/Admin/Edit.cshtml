@model Assignment2.Models.Customer

@{
    ViewData["Title"] = "Edit";
}

@{
    ViewData["Title"] = "Edit Details";
}

    <h1 class="display-4">Edit: @Model.CustomerID (@Model.Name)</h1>

    <div class="row">
        <div class="col-md-4">
            <form asp-action="UpdateCustomer">
                <input type="hidden" asp-for="CustomerID" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label for="Name" class="control-label"></label>
                    <input class="form-control" asp-for="Name" />
                    @Html.ValidationMessage("Name", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label for="Address" class="control-label"></label>
                    <input id="Address" name="Address" class="form-control" asp-for="Address" />
                </div>

                <div class="form-group">
                    <label for="City" class="control-label"></label>
                    <input id="City" name="City" class="form-control" asp-for="City" />
                </div>

                <div class="form-group">
                    <label for="PostCode" class="control-label"></label>
                    <input id="PostCode" name="PostCode" class="form-control" asp-for="PostCode" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}


